{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nexport let AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000';\n    this.username = '';\n    this.password = '';\n    this.token = '';\n    this.title = 'my-app';\n  }\n  sendLogin() {\n    this.http.post(this.url + '/login', {\n      username: this.username,\n      password: this.password\n    }).subscribe(response => {\n      this.token = response.token;\n      console.log(this.token);\n      this.getPrivateZone();\n    }, error => {\n      console.log(error);\n    });\n  }\n  getPrivateZone() {\n    const headers = new HttpHeaders({\n      auth: this.token\n    });\n    this.http.get(this.url + '/protected', {\n      headers: headers\n    }).subscribe(response => {\n      alert(\"zona privada usuario:\" + response.user.username);\n      console.log(response);\n    }, error => {\n      alert(error);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","HttpHeaders","AppComponent","constructor","http","url","username","password","token","title","sendLogin","post","subscribe","response","console","log","getPrivateZone","error","headers","auth","get","alert","user","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Tecnologia\\Desktop\\Richard suan yara\\angular\\my-app\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor( private http:HttpClient){}\n  url = 'http://localhost:3000';\n  username: string = '';\n  password: string = '';\n  token: string='';\n  title = 'my-app';\n  \n  sendLogin(){\n    this.http.post(this.url+'/login',{\n      username:this.username,\n      password: this.password\n    }).subscribe((response : any)=>{\n    \n    this.token  = response.token;\n    console.log(this.token);\n    this.getPrivateZone();\n  },(error)=>{\n    console.log(error);\n  });\n  }\n  getPrivateZone(){\n    const headers = new HttpHeaders({\n      auth:this.token\n    });\n    this.http.get(this.url + '/protected',{headers:headers}).subscribe((response:any)=>{\n      alert(\"zona privada usuario:\" + response.user.username);\n      console.log(response);\n    },(error)=>{\n      alert(error);\n    });\n  }\n\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAoBC,WAAW,QAAQ,sBAAsB;AAQtD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EACvBC,YAAqBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IACzB,KAAAC,GAAG,GAAG,uBAAuB;IAC7B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAS,EAAE;IAChB,KAAAC,KAAK,GAAG,QAAQ;EALsB;EAOtCC,SAASA,CAAA;IACP,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,GAAG,GAAC,QAAQ,EAAC;MAC/BC,QAAQ,EAAC,IAAI,CAACA,QAAQ;MACtBC,QAAQ,EAAE,IAAI,CAACA;KAChB,CAAC,CAACK,SAAS,CAAEC,QAAc,IAAG;MAE/B,IAAI,CAACL,KAAK,GAAIK,QAAQ,CAACL,KAAK;MAC5BM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC;MACvB,IAAI,CAACQ,cAAc,EAAE;IACvB,CAAC,EAAEC,KAAK,IAAG;MACTH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACF;EACAD,cAAcA,CAAA;IACZ,MAAME,OAAO,GAAG,IAAIjB,WAAW,CAAC;MAC9BkB,IAAI,EAAC,IAAI,CAACX;KACX,CAAC;IACF,IAAI,CAACJ,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACf,GAAG,GAAG,YAAY,EAAC;MAACa,OAAO,EAACA;IAAO,CAAC,CAAC,CAACN,SAAS,CAAEC,QAAY,IAAG;MACjFQ,KAAK,CAAC,uBAAuB,GAAGR,QAAQ,CAACS,IAAI,CAAChB,QAAQ,CAAC;MACvDQ,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EAAEI,KAAK,IAAG;MACTI,KAAK,CAACJ,KAAK,CAAC;IACd,CAAC,CAAC;EACJ;CAGD;AAlCYf,YAAY,GAAAqB,UAAA,EALxBvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWxB,YAAY,CAkCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}